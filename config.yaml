# 用量閥值
LEVEL_THRESHOLD: 60
# Past Delivery Data directory name
DIRECTORY_PATH: 
    past_delivery_data: PastDeliveryData
    consumable_levels_data: ConsumableLevelsData
COMBINED_SHEET_NAME: 
    past_delivery: combined_past_delivery_sheet
    consumable_levels: combined_consumable_levels_sheet
EXPORT_QUERY_COMMAND: sqlite3 -header -csv database.db < query_need_refill.sql > need_refill.csv
SHEET_FIRST_ROW:
    past_delivery_data:
        - serial
        - model
        - HP_case_id
        - company_name
        - order_date
        - arrive_date
        - goods_receiver_name
        - address
        - goods_receiver_phone
        - goods_name
        - quantity
        - remark
        - goods_type
        - unamed
    consumable_levels_data:
        - Report Content DateTime
        - Customer Name
        - Country
        - Region
        - Site
        - Building
        - Level
        - Product Model Name
        - Asset Number
        - Serial Number
        - Usage Count Date
        - Black Level
        - Cyan Level
        - Magenta Level
        - Yellow Level
        - Light Cyan Level
        - Light Magenta Level
        - Tri-Color Level
        - Bonding Agent Level
        - Staple Level
        - Staple Second Level
        - Staple Third Level
        - Cyan Drum Level
        - Yellow Drum Level
        - Magenta Drum Level
        - Black Drum Level
        - Drum Kit Level
        - Transfer Kit Level
        - Fuser Kit Level
        - Cleaning Kit Level
        - Maintenance Combo Kit Level
        - Document Feeder Kit Level
        - Roller Level
        - Grey Level
        - Light Grey Level
        - Photo Black Level
        - Matte Black Level
        - Red Level
        - Green Level
        - Blue Level
        - Gloss Enhancer Level
        - Pen Wipe Level
        - Collection Unit Level
        - Black Developer Maintenance Level
        - Cyan Developer Maintenance Level
        - Magenta Developer Maintenance Level
        - Yellow Developer Maintenance Level

DB_NAME: database.db

SQL_COMMANDS:
    check_need_refill_with_2args: select need_refill from deliver_status where serial_number = '{serial_number}' and goods_type = '{goods_type}'
    insert_deliver_status_with_2args: replace into deliver_status (serial_number, goods_type) values ('{serial_number}', '{goods_type}')
    update_deliver_status_with_2args: update deliver_status SET need_refill = 1 where serial_number = '{serial_number}' and goods_type = '{goods_type}'
    reset_db_commands: 
        create_table_past_delivery_data: "CREATE TABLE past_delivery_data (
            serial INTEGER, 
            model TEXT, 
            HP_case_id TEXT, 
            company_name TEXT,
            order_date INTEGER,
            arrive_date INTEGER,
            goods_receiver_name TEXT,
            address TEXT,
            goods_receiver_phone TEXT,
            goods_name TEXT,
            quantity INTEGER,
            remark TEXT, goods_type TEXT, unamed TEXT);"
        create_table_deliver_status: "CREATE TABLE deliver_status (
            last_update_date TEXT,
            serial_number TEXT,
            goods_name TEXT,
            goods_type TEXT,
            product_level INTEGER,
            need_refill INTEGER DEFAULT 1,
            PRIMARY KEY(serial_number, goods_name, goods_type);"
        create_table_consumable_levels: "CREATE TABLE consumable_levels (
            `Report Content DateTime` TEXT,
            `Customer Name` TEXT,
            `Country` TEXT,
            `Region` TEXT,
            `Site` TEXT,
            `Building` TEXT,
            `Level` INTEGER,
            `Product Model Name` TEXT,
            `Asset Number` TEXT,
            `Serial Number` TEXT,
            `Usage Count Date` TEXT,
            `Black Level` INTEGER,
            `Cyan Level` INTEGER,
            `Magenta Level` INTEGER,
            `Yellow Level` INTEGER,
            `Light Cyan Level` INTEGER,
            `Light Magenta Level` INTEGER,
            `Tri-Color Level` INTEGER,
            `Bonding Agent Level` INTEGER,
            `Staple Level` INTEGER,
            `Staple Second Level` INTEGER,
            `Staple Third Level` INTEGER,
            `Cyan Drum Level` INTEGER,
            `Yellow Drum Level` INTEGER,
            `Magenta Drum Level` INTEGER,
            `Black Drum Level` INTEGER,
            `Drum Kit Level` INTEGER,
            `Transfer Kit Level` INTEGER,
            `Fuser Kit Level` INTEGER,
            `Cleaning Kit Level` INTEGER,
            `Maintenance Combo Kit Level` INTEGER,
            `Document Feeder Kit Level` INTEGER,
            `Roller Level` INTEGER,
            `Grey Level` INTEGER,
            `Light Grey Level` INTEGER,
            `Photo Black Level` INTEGER,
            `Matte Black Level` INTEGER,
            `Red Level` INTEGER,
            `Green Level` INTEGER,
            `Blue Level` INTEGER,
            `Gloss Enhancer Level` INTEGER,
            `Pen Wipe Level` INTEGER,
            `Collection Unit Level` INTEGER,
            `Black Developer Maintenance Level` INTEGER,
            `Cyan Developer Maintenance Level` INTEGER,
            `Magenta Developer Maintenance Level` INTEGER,
            `Yellow Developer Maintenance Level` INTEGER,
            PRIMARY KEY(`Report Content DateTime`, `Serial Number`));"
        create_product_level: "CREATE TABLE product_level (
            last_update_date TEXT,
            serial_number TEXT,
            goods_type TEXT,
            product_level INTEGER,
            PRIMARY KEY(serial_number, goods_type))"
        create_view_need_deliver_report: "CREATE VIEW need_deliver_report AS SELECT DISTINCT
                c.`Product Model Name` AS '機型',
                d.serial_number AS '序號',
                c.`Asset Number` AS '資產編號',
                MAX(d.goods_name) AS '品項',
                d.goods_type AS '品名',
                c.`Site` AS '所在地',
                c.`Region` AS '地區',
                c.`Customer Name` AS '客戶',
                c.`Building` AS '所屬大樓',
                c.`Level` AS '樓層',
                c.`Usage Count Date` AS '最後用量資訊收集時間'
            FROM consumable_levels AS c
            JOIN deliver_status AS d ON d.serial_number = c.`Serial Number`
            WHERE d.need_refill = 1 AND d.need_refill_count = 0
            GROUP BY d.serial_number, d.goods_type;"
    fill_known_goods_type: "update
            past_delivery_data
        set
            goods_type = (
            select
                goods_type
            from
                (
                select
                    goods_type, goods_name
                from
                    past_delivery_data
                where
                    goods_type is not null
                group by
                    goods_name)
            where
                goods_name = past_delivery_data.goods_name )
        where
            goods_type is null"
    update_deliver_status_up_to_date: "REPLACE INTO deliver_status 
        SELECT
            DATE('NOW') AS last_update_date,
            c."Serial Number" AS serial_number,
            '黑' AS 'goods_type',
            CASE WHEN "Black Level" >= 0 THEN "Black Level" ELSE 'N/A' END product_level,
            CASE WHEN "Black Level" <= 30 
            AND (SELECT need_refill FROM deliver_status AS d WHERE c."Serial Number" = d.serial_number and goods_type = d.goods_type) = 0 
            AND "Black Level" - (SELECT product_level FROM deliver_status AS d WHERE c."Serial Number" = d.serial_number and goods_type = d.goods_type) < 0
            THEN 1 ELSE 0 END 'need_refill'
        FROM
            consumable_levels as c
        WHERE "Black Level" != 'N/A'"
    get_need_deliver_report: select * from need_deliver_report

